# Generated by Django 3.2.9 on 2022-11-12 12:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('is_accepted', models.BooleanField(default=None, null=True)),
                ('is_paid', models.BooleanField(default=False)),
                ('vehicle_image', models.ImageField(blank=True, null=True, upload_to='')),
                ('license_plate', models.ImageField(blank=True, null=True, upload_to='')),
                ('license_plate_text', models.CharField(blank=True, max_length=50, null=True)),
                ('amount', models.FloatField(blank=True, default=0, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('vehicle_image', models.ImageField(blank=True, null=True, upload_to='user_vehicle_images/%Y%m%d')),
                ('license_plate_image', models.ImageField(blank=True, null=True, upload_to='license_plate_images/%Y%m%d')),
                ('licenseplatetext', models.CharField(blank=True, max_length=100, null=True)),
                ('entry_time', models.TimeField(blank=True, null=True)),
                ('exit_time', models.TimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, choices=[('verified', 'verified'), ('unknown', 'unknown')], max_length=512, null=True)),
                ('parking_slot_details', models.CharField(blank=True, max_length=1024, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserQuery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(blank=True, max_length=1024, null=True)),
                ('pronoun', models.CharField(blank=True, max_length=1024, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=512, null=True)),
                ('query', models.TextField(blank=True, null=True)),
                ('status', models.CharField(blank=True, max_length=512, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('text', models.TextField(max_length=500)),
                ('datetime', models.DateTimeField(auto_now_add=True)),
                ('is_accepted', models.BooleanField(default=None)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.appointment')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppointmentSlot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('position', models.CharField(blank=True, max_length=50, null=True)),
                ('date', models.DateField()),
                ('is_available', models.BooleanField(default=True)),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('slot_details', models.TextField(blank=True, max_length=500, null=True)),
                ('is_verified', models.BooleanField(default=None, null=True)),
                ('fees', models.IntegerField(blank=True, default=0, null=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='appointment',
            name='slot',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.appointmentslot'),
        ),
    ]
